[
    {
        "prompt": "WDL Script 1:\n\nworkflow wf1 {\n  Int inputA = 5\n  Int inputB = 3\n  call Add { input: a = inputA, b = inputB }\n}\n\ntask Add {\n  Int a\n  Int b\n  command <<<\n    echo $((~{a} + ~{b}))\n  >>>\n  output {\n    Int sum = read_int(stdout())\n  }\n}\n\nWDL Script 2:\n\nworkflow wf2 {\n  Int inputA = 7\n  Int inputB = 2\n  call Multiply { input: a = inputA, b = inputB }\n}\n\ntask Multiply {\n  Int a\n  Int b\n  command <<<\n    echo $((~{a} * ~{b}))\n  >>>\n  output {\n    Int product = read_int(stdout())\n  }\n}", 
        "completion": "Unified WDL Script:\n\ntask Add {\n  Int a\n  Int b\n  command <<<\n    echo $((~{a} + ~{b}))\n  >>>\n  output {\n    Int sum = read_int(stdout())\n  }\n}\n\ntask Multiply {\n  Int a\n  Int b\n  command <<<\n    echo $((~{a} * ~{b}))\n  >>>\n  output {\n    Int product = read_int(stdout())\n  }\n}\n\nworkflow wf {\n  Int inputA1 = 5\n  Int inputB1 = 3\n  Int inputA2 = 7\n  Int inputB2 = 2\n  call Add { input: a = inputA1, b = inputB1 }\n  call Multiply { input: a = inputA2, b = inputB2 }\n}"
    },
    {
        "prompt": "WDL Script 1:\n\nworkflow wf1 {\n  Int inputA = 10\n  Int inputB = 5\n  call Subtract { input: a = inputA, b = inputB }\n}\n\ntask Subtract {\n  Int a\n  Int b\n  command <<<\n    echo $((~{a} - ~{b}))\n  >>>\n  output {\n    Int difference = read_int(stdout())\n  }\n}\n\nWDL Script 2:\n\nworkflow wf2 {\n  Int inputA = 3\n  Int inputB = 2\n  call Divide { input: a = inputA, b = inputB }\n}\n\ntask Divide {\n  Int a\n  Int b\n  command <<<\n    echo $((~{a} / ~{b}))\n  >>>\n  output {\n    Int quotient = read_int(stdout())\n  }\n}",
        "completion": "Unified WDL Script:\n\ntask Subtract {\n  Int a\n  Int b\n  command <<<\n    echo $((~{a} - ~{b}))\n  >>>\n  output {\n    Int difference = read_int(stdout())\n  }\n}\n\ntask Divide {\n  Int a\n  Int b\n  command <<<\n    echo $((~{a} / ~{b}))\n  >>>\n  output {\n    Int quotient = read_int(stdout())\n  }\n}\n\nworkflow wf {\n  Int inputA1 = 10\n  Int inputB1 = 5\n  Int inputA2 = 3\n  Int inputB2 = 2\n  call Subtract { input: a = inputA1, b = inputB1 }\n  call Divide { input: a = inputA2, b = inputB2 }\n}"
    },
    {
        "prompt": "WDL Script 1:\n\ntask Hello {\n  command <<<\n    echo 'Hello, World!'\n  >>>\n  output {\n    String message = read_string(stdout())\n  }\n}\n\nWDL Script 2:\n\ntask Goodbye {\n  command <<<\n    echo 'Goodbye, World!'\n  >>>\n  output {\n    String message = read_string(stdout())\n  }\n}\n\nworkflow GreetingsWorkflow {\n  call Hello\n  call Goodbye\n}",
        "completion": "Unified WDL Script:\n\ntask Hello {\n  command <<<\n    echo 'Hello, World!'\n  >>>\n  output {\n    String message = read_string(stdout())\n  }\n}\n\ntask Goodbye {\n  command <<<\n    echo 'Goodbye, World!'\n  >>>\n  output {\n    String message = read_string(stdout())\n  }\n}\n\nworkflow GreetingsWorkflow {\n  call Hello\n  call Goodbye\n}"
    },
    {
        "prompt": "WDL Script 1:\n\nworkflow DataPreparation {\n  File input\n  File output\n  call CleanData { input: inputFile = input, outputFile = output }\n}\n\ntask CleanData {\n  File inputFile\n  File outputFile\n  command <<<\n    # Clean data logic here\n  >>>\n  output {\n    File cleanedOutput = outputFile\n  }\n}\n\nWDL Script 2:\n\nworkflow ModelTraining {\n  File input\n  File model\n  call TrainModel { input: dataFile = input, modelFile = model }\n}\n\ntask TrainModel {\n  File dataFile\n  File modelFile\n  command <<<\n    # Model training logic here\n  >>>\n  output {\n    File trainedModel = modelFile\n  }\n}",
        "completion": "Unified WDL Script:\n\ntask CleanData {\n  File inputFile\n  File outputFile\n  command <<<\n    # Clean data logic here\n  >>>\n  output {\n    File cleanedOutput = outputFile\n  }\n}\n\ntask TrainModel {\n  File dataFile\n  File modelFile\n  command <<<\n    # Model training logic here\n  >>>\n  output {\n    File trainedModel = modelFile\n  }\n}\n\nworkflow DataPreparation {\n  File input\n  File output\n  call CleanData { input: inputFile = input, outputFile = output }\n}\n\nworkflow ModelTraining {\n  File input\n  File model\n  call TrainModel { input: dataFile = input, modelFile = model }\n}"
    },
    {
        "prompt": "WDL Script 1:\n\nworkflow DataPreprocessing {\n  File input\n  File output\n  call CleanData { input: inputFile = input, outputFile = output }\n}\n\ntask CleanData {\n  File inputFile\n  File outputFile\n  command <<<\n    # Clean data logic here\n  >>>\n  output {\n    File cleanedOutput = outputFile\n  }\n}\n\nWDL Script 2:\n\ntask FeatureExtraction {\n  File input\n  File output\n  command <<<\n    # Feature extraction logic here\n  >>>\n  output {\n    File featuresOutput = output\n  }\n}\n\ntask ModelTraining {\n  File features\n  File model\n  command <<<\n    # Model training logic here\n  >>>\n  output {\n    File trainedModel = model\n  }\n}\n\nworkflow DataPipeline {\n  File inputData\n  File cleanedData\n  File extractedFeatures\n  File finalModel\n  call DataPreprocessing { input: input = inputData, output = cleanedData }\n  call FeatureExtraction { input: input = cleanedData, output = extractedFeatures }\n  call ModelTraining { input: features = extractedFeatures, model = finalModel }\n}",
        "completion": "Unified WDL Script:\n\ntask CleanData {\n  File inputFile\n  File outputFile\n  command <<<\n    # Clean data logic here\n  >>>\n  output {\n    File cleanedOutput = outputFile\n  }\n}\n\ntask FeatureExtraction {\n  File input\n  File output\n  command <<<\n    # Feature extraction logic here\n  >>>\n  output {\n    File featuresOutput = output\n  }\n}\n\ntask ModelTraining {\n  File features\n  File model\n  command <<<\n    # Model training logic here\n  >>>\n  output {\n    File trainedModel = model\n  }\n}\n\nworkflow DataPipeline {\n  File inputData\n  File cleanedData\n  File extractedFeatures\n  File finalModel\n  call CleanData { input: inputFile = inputData, outputFile = cleanedData }\n  call FeatureExtraction { input: input = cleanedData, output = extractedFeatures }\n  call ModelTraining { input: features = extractedFeatures, model = finalModel }\n}"
    },
    {
        "prompt": "WDL Script 1:\n\nworkflow DataProcessing {\n  File input\n  File output\n  call CleanData { input: inputFile = input, outputFile = output }\n  call NormalizeData { input: inputFile = output, outputFile = output }\n}\n\ntask CleanData {\n  File inputFile\n  File outputFile\n  command <<<\n    # Clean data logic here\n  >>>\n  output {\n    File cleanedOutput = outputFile\n  }\n}\n\ntask NormalizeData {\n  File inputFile\n  File outputFile\n  command <<<\n    # Data normalization logic here\n  >>>\n  output {\n    File normalizedOutput = outputFile\n  }\n}\n\nWDL Script 2:\n\ntask FeatureExtraction {\n  File input\n  File output\n  command <<<\n    # Feature extraction logic here\n  >>>\n  output {\n    File featuresOutput = output\n  }\n}\n\ntask ModelTraining {\n  File features\n  File model\n  command <<<\n    # Model training logic here\n  >>>\n  output {\n    File trainedModel = model\n  }\n}\n\nworkflow DataPipeline {\n  File inputData\n  File cleanedData\n  File extractedFeatures\n  File finalModel\n  call DataProcessing { input: input = inputData, output = cleanedData }\n  call FeatureExtraction { input: input = cleanedData, output = extractedFeatures }\n  call ModelTraining { input: features = extractedFeatures, model = finalModel }\n}",
        "completion": "Unified WDL Script:\n\ntask CleanData {\n  File inputFile\n  File outputFile\n  command <<<\n    # Clean data logic here\n  >>>\n  output {\n    File cleanedOutput = outputFile\n  }\n}\n\ntask NormalizeData {\n  File inputFile\n  File outputFile\n  command <<<\n    # Data normalization logic here\n  >>>\n  output {\n    File normalizedOutput = outputFile\n  }\n}\n\ntask FeatureExtraction {\n  File input\n  File output\n  command <<<\n    # Feature extraction logic here\n  >>>\n  output {\n    File featuresOutput = output\n  }\n}\n\ntask ModelTraining {\n  File features\n  File model\n  command <<<\n    # Model training logic here\n  >>>\n  output {\n    File trainedModel = model\n  }\n}\n\nworkflow DataPipeline {\n  File inputData\n  File cleanedData\n  File extractedFeatures\n  File finalModel\n  call CleanData { input: inputFile = inputData, outputFile = cleanedData }\n  call NormalizeData { input: inputFile = cleanedData, outputFile = cleanedData }\n  call FeatureExtraction { input: input = cleanedData, output = extractedFeatures }\n  call ModelTraining { input: features = extractedFeatures, model = finalModel }\n}"
    }  
]
      